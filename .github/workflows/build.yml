
on:
  workflow_call:
    outputs:
      version:
        description: The built version
        value: ${{jobs.build.outputs.version}}
jobs:
  build:
    name: build/${{matrix.os-arch}}/${{matrix.build-type}}
    runs-on: ${{matrix.runs-on}}
    steps:
      - name: Set up visual studio environment
        shell: pwsh
        run: |
          $VSRoot = $(
            vswhere `
              -latest `
              -products * `
              -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 `
              -property installationPath)
          cmd /c "`"${VSRoot}/VC/Auxiliary/Build/vcvarsall.bat`" x64&set" `
            | Where-Object { $_ -like '*=*' } `
            | Out-File -Encoding utf8 -Append $Env:GITHUB_ENV
      - uses: actions/checkout@v5
        with:
          submodules: true
      - name: Make build directory
        run: cmake -E make_directory build
      - name: "Initialize vcpkg"
        working-directory: build
        run: ../third-party/vcpkg/bootstrap-vcpkg.bat
      - name: Configure
        working-directory: build
        id: configure
        run: |
          $args = @()

          cmake .. `
            --preset "${{matrix.build-type}}" `
            "-DSOURCELINK=https://raw.githubusercontent.com/${{github.repository}}/${{github.sha}}" `
            @args
          
          Add-Content $Env:GITHUB_OUTPUT "version=$(Get-Content version.txt)"
        shell: pwsh
      - name: Compile
        working-directory: build
        run: cmake --build . --parallel --verbose
      - name: Upload Executable Artifacts
        uses: actions/upload-artifact@v4
        if: ${{ matrix.build-type == 'Release' && matrix.os-arch == 'Win64' }}
        with:
          name: "OpenXR-API-Layers-GUI-v${{steps.configure.outputs.version}}"
          path: build/out/bin
      - name: Upload Debug Symbol Artifacts
        uses: actions/upload-artifact@v4
        if: ${{ matrix.build-type == 'Release' && matrix.os-arch == 'Win64' }}
        with:
          name: "OpenXR-API-Layers-GUI-v${{steps.configure.outputs.version}}-DebugSymbols"
          path: build/out/pdb
    outputs:
      version: ${{steps.configure.outputs.version}}
    strategy:
      fail-fast: false
      matrix:
        os-arch: [Win64]
        build-type:
          - Debug - default
          - Debug - clang-cl
          - Release
        include:
          - os-arch: Win64
            runs-on: windows-latest
            vcpkg-arch: x64-windows-static